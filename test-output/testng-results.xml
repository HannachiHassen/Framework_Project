<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-16T15:20:40 EDT" name="Suite" finished-at="2022-08-16T15:23:31 EDT" duration-ms="170952">
    <groups>
    </groups>
    <test started-at="2022-08-16T15:20:40 EDT" name="TestFour" finished-at="2022-08-16T15:21:06 EDT" duration-ms="25971">
      <class name="testCases.FourTest">
        <test-method is-config="true" signature="setUP()[pri:0, instance:testCases.FourTest@3c9c0d96]" started-at="2022-08-16T15:20:41 EDT" name="setUP" finished-at="2022-08-16T15:21:02 EDT" duration-ms="21054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="testFour()[pri:0, instance:testCases.FourTest@3c9c0d96]" started-at="2022-08-16T15:21:02 EDT" name="testFour" finished-at="2022-08-16T15:21:04 EDT" duration-ms="2711" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testCases.FourTest.testFour(FourTest.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFour -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:testCases.FourTest@3c9c0d96]" started-at="2022-08-16T15:21:04 EDT" name="closebrowser" finished-at="2022-08-16T15:21:06 EDT" duration-ms="1965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- testCases.FourTest -->
    </test> <!-- TestFour -->
    <test started-at="2022-08-16T15:21:07 EDT" name="TestTwo" finished-at="2022-08-16T15:21:39 EDT" duration-ms="31593">
      <class name="testCases.TwoTest">
        <test-method is-config="true" signature="setUP()[pri:0, instance:testCases.TwoTest@149dd36b]" started-at="2022-08-16T15:21:07 EDT" name="setUP" finished-at="2022-08-16T15:21:21 EDT" duration-ms="14306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="testTwo()[pri:0, instance:testCases.TwoTest@149dd36b]" started-at="2022-08-16T15:21:21 EDT" name="testTwo" finished-at="2022-08-16T15:21:35 EDT" duration-ms="13303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwo -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:testCases.TwoTest@149dd36b]" started-at="2022-08-16T15:21:35 EDT" name="closebrowser" finished-at="2022-08-16T15:21:39 EDT" duration-ms="3976" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- testCases.TwoTest -->
    </test> <!-- TestTwo -->
    <test started-at="2022-08-16T15:21:39 EDT" name="TestThree" finished-at="2022-08-16T15:22:01 EDT" duration-ms="22552">
      <class name="testCases.ThreeTest">
        <test-method is-config="true" signature="setUP()[pri:0, instance:testCases.ThreeTest@e19bb76]" started-at="2022-08-16T15:21:39 EDT" name="setUP" finished-at="2022-08-16T15:21:57 EDT" duration-ms="18007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method signature="testThree()[pri:0, instance:testCases.ThreeTest@e19bb76]" started-at="2022-08-16T15:21:57 EDT" name="testThree" finished-at="2022-08-16T15:21:59 EDT" duration-ms="2012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThree -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:testCases.ThreeTest@e19bb76]" started-at="2022-08-16T15:21:59 EDT" name="closebrowser" finished-at="2022-08-16T15:22:01 EDT" duration-ms="2529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- testCases.ThreeTest -->
    </test> <!-- TestThree -->
    <test started-at="2022-08-16T15:22:01 EDT" name="LoginTest" finished-at="2022-08-16T15:23:31 EDT" duration-ms="90178">
      <class name="testCases.LoginTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:testCases.LoginTest@487db668]" started-at="2022-08-16T15:22:01 EDT" name="openApplication" finished-at="2022-08-16T15:22:19 EDT" duration-ms="17533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login()[pri:1, instance:testCases.LoginTest@487db668]" started-at="2022-08-16T15:22:19 EDT" name="login" finished-at="2022-08-16T15:22:23 EDT" duration-ms="4084" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closure()[pri:0, instance:testCases.LoginTest@487db668]" started-at="2022-08-16T15:22:23 EDT" name="closure" finished-at="2022-08-16T15:22:25 EDT" duration-ms="2311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
        <test-method is-config="true" signature="openApplication()[pri:0, instance:testCases.LoginTest@487db668]" started-at="2022-08-16T15:22:25 EDT" name="openApplication" finished-at="2022-08-16T15:22:41 EDT" duration-ms="16246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:testCases.LoginTest@487db668]" started-at="2022-08-16T15:22:41 EDT" name="login" data-provider="getLoginData" finished-at="2022-08-16T15:22:47 EDT" duration-ms="5891" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[arun.selenium@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Second@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closure()[pri:0, instance:testCases.LoginTest@487db668]" started-at="2022-08-16T15:22:47 EDT" name="closure" finished-at="2022-08-16T15:22:51 EDT" duration-ms="3301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
        <test-method is-config="true" signature="openApplication()[pri:0, instance:testCases.LoginTest@487db668]" started-at="2022-08-16T15:22:51 EDT" name="openApplication" finished-at="2022-08-16T15:23:08 EDT" duration-ms="17284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:testCases.LoginTest@487db668]" started-at="2022-08-16T15:23:08 EDT" name="login" data-provider="getLoginData" finished-at="2022-08-16T15:23:29 EDT" duration-ms="20951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dummy@test.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closure()[pri:0, instance:testCases.LoginTest@487db668]" started-at="2022-08-16T15:23:29 EDT" name="closure" finished-at="2022-08-16T15:23:31 EDT" duration-ms="2565" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- testCases.LoginTest -->
    </test> <!-- LoginTest -->
  </suite> <!-- Suite -->
</testng-results>
